enabled: true
component: frontend


# -- Override name
nameOverride:
# -- Override fullname
fullnameOverride: ckan

image:
  # -- Image repository
  repository: ghcr.io/keitaroinc/ckan
  # [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  pullPolicy: IfNotPresent
   # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # -- Create a image pully secret of type kubernetes.io/dockerconfigjson
  credentials:
    # -- Name of the image pull secret to create
    secretName: ckan-sct-pull
    # -- Image registry
    registry: quay.io
    # -- Image registry username
    username: user
    # -- Image registry password
    password: changeMe
    # -- Image registry eMail address
    email: someone@host.com

# -- [Image pull secrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets:
  - name: ckan-sct-pull

# -- Additional pod annotations
podAnnotations: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Type of service for http
  type: ClusterIP
  # -- Service port for http
  port: 5000

# -- Number of replicas. Only used if autoscaling.enabled = false
replicaCount: 1
autoscaling:
  # -- Enable/disable pod autoscaling, if disabled `replicaCount` is used to set number of pods.
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 1
  # -- Maximum number of replicas
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Ingress configuration
ingress:
  # -- Enable/disable ingress
  enabled: true
  # -- Name of the [IngressClass](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)
  # to use in Ingress routes.
  className: nginx
  # -- List of [FQDNs](https://de.wikipedia.org/wiki/Fully-Qualified_Host_Name) for this Ingress.
  # Note: All FQDNs will be used for Ingress hosts and TLS certificate.
  # The global setting overwrites this setting. Note: The first domain in the list will be used
  # as CKAN serviceRootURL and MQTT host.
  domains: []
  # -- Additional Ingress annotations
  annotations:
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
  # -- Make CKAN available at a subpath. By default caddy will be available from [DOMAIN]/
  # Don't append or prepend :// or /
  subpath:
  certManager:
    # -- eMail address for ACME registration with Let's Encrypt. Only used for issuerType = namespace.
    issuerEmail: me@example.com
    # -- Type of [cert-manager](https://cert-manager.io/docs/) Issuer: Use either "namespace" or "cluster".
    issuerType: namespace
    # -- Name of the Issuer to use. For certManager.type = namespace
    # `letsencrypt-staging`, `letsencrypt-prod` and `self-signed` are available.
    issuerName: letsencrypt-staging

# -- Extra environment variables. Values need to be quoted.
extraEnv: {}

# persistence:
#   enabled: true
#   save: "60 1"
#   accessModes:
#     - ReadWriteOnce
#   capacity: 4Gi

# General settings
siteUrl: https://my-ckan.de
siteTitle: My CKAN Instance
siteDescription: This is my CKAN instance for stuff.
siteLogo: /base/images/group_icons/work.svg
favicon: /base/images/favicon.ico
siteId: my ckan_instance
maxUploadSizeMB: 250

# plugins: envvars image_view text_view recline_view datastore datapusher
plugins: envvars image_view text_view recline_view datastore datapusher

auth:
  anon_create_dataset: false
  create_unowned_dataset: false
  create_dataset_if_not_in_organization: false
  user_create_groups: false
  user_create_organizations: false
  user_delete_groups: false
  user_delete_organizations: false
  create_user_via_api: false
  create_user_via_web: true
  roles_that_cascade_to_sub_groups:  admin editor member
  public_user_details: true
  public_activity_stream_detail: true
  allow_dataset_collaborators: false
  create_default_api_keys: false

# Create a sysadmin account
# Note: Min. password length = 8 char
sysadmin:
  enabled: true
  user: admin
  password: changeMe
  email: user@example.de

dataset:
  dataset.create_on_ui_requires_resources: false

locale:
  default: de
  order: de en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
  offered: de en
  filtered_out: en_GB

# Add additional CKAN settings to production.ini
# Use |+ or |- after additionalSettings only for this to work
additionalSettings: |+
  # other ckan settings
  # an even more settings

# Persistence -----------------------------------------------------------------
persistence:
  # -- Enable/disable persistent data storage.
  enabled: true
  # -- StorageClass to use, leave empty to use default StorageClass.
  storageClassName:
  # -- Mount path of the storage. Omit trailing `/` !
  storagePath: /var/lib/ckan
  accessModes:
    - ReadWriteOnce
  # -- Storage [capacity](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#capacity)
  capacity: 4Gi
  # -- Additional annotations for PVCs
  # Set helm.sh/resource-policy: keep to avoid deletion of PVC on helm upgrade/uninstall
  annotations:
  # helm.sh/resource-policy: keep

# CKAN database ---------------------------------------------------------------
db:
  host: &DBHost postgis-hl
  port: &DBPort 5432
  dbname: &DBName ckan_default
  auth:
    username: &DBUser ckan
    password: &DBPassword changeMe

# Datastore -------------------------------------------------------------------
datastore:
  host: *DBHost
  port: *DBPort
  dbname: &DatastoreDBName datastore
  auth:
    ro:
      username: &DatastoreROUsername datastore_ro
      password: &DatastoreROUsername changeMe
    rw:
      username: &DatastoreRWUsername ckan
      password: &DatastoreRWPassword changeMe

# Redis -----------------------------------------------------------------------
redis:
  url: redis://redis-hl:6379/0

# Solr ------------------------------------------------------------------------
solr:
  url: http://solr-hl:8983/solr/ckan
  user:
  password:

# DataPusher ------------------------------------------------------------------
datapusher:
  url: http://datapusher:8000/
  callback_url_base: http://ckan:5000/

# SMTP ------------------------------------------------------------------------
smtp:
  server: "smtpServerURLorIP:port"
  user: "smtpUser"
  password: "smtpPassword"
  mailFrom: "postmaster@domain.com"
  tls: "enabled"
  startTls: "true"

# Resources -------------------------------------------------------------------
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 256Mi

nodeSelector: {}
tolerations: []
affinity: {}

# Readyness and liveness checks -----------------------------------------------

readiness:
  # Inital delay seconds for the readiness probe
  initialDelaySeconds: 30
  #  Check interval for the readiness probe
  periodSeconds: 10
  # Failure threshold for the readiness probe
  failureThreshold: 6
  # Timeout interval for the readiness probe
  timeoutSeconds: 10
liveness:
  # Initial delay for the liveness probe
  initialDelaySeconds: 30
  # Check interval for the liveness probe
  periodSeconds: 10
  # Failure threshold for the liveness probe
  failureThreshold: 6
  # Timeout interval for the liveness probe
  timeoutSeconds: 10
