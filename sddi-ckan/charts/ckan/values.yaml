enabled: true
component: frontend
replicaCount: 1

image:
  repository: ghcr.io/keitaroinc/ckan
  tag: 2.9.5
  pullPolicy: IfNotPresent
  credentials:
    secretName: ckan-sct-pull
    registry: quay.io
    username: someone
    password: sillyness
    email: someone@host.com

imagePullSecrets:
  - name: ckan-sct-pull

# Create a LoadBalancer service for external Database access
loadBalancer:
  enabled: false

# persistence:
#   enabled: true
#   save: "60 1"
#   accessModes:
#     - ReadWriteOnce
#   capacity: 4Gi

# General settings
siteUrl: http://testing.sta.savenow.de/
siteTitle: My CKAN Instance
siteDescription: This is my CKAN instance for stuff.
rootPath:
siteId: my ckan_instance
maxUploadSizeMB: 250

# plugins: envvars image_view text_view recline_view datastore datapusher
plugins: envvars image_view text_view recline_view datastore

# Persistence -----------------------------------------------------------------
persistence:
  storagePath: /var/lib/ckan

# CKAN database ---------------------------------------------------------------
db:
  host: &DBHost postgis-svc-headless
  port: &DBPort 5432
  dbname: &DBName ckan_default
  auth:
    username: &DBUser ckan
    password: &DBPassword changeMe

auth:
  anon_create_dataset: false
  create_unowned_dataset: false
  create_dataset_if_not_in_organization: false
  user_create_groups: false
  user_create_organizations: false
  user_delete_groups: false
  user_delete_organizations: false
  create_user_via_api: false
  create_user_via_web: true
  roles_that_cascade_to_sub_groups:  admin editor member
  public_user_details: true
  public_activity_stream_detail: true
  allow_dataset_collaborators: false
  create_default_api_keys: false


# Datastore -------------------------------------------------------------------
datastore:
  host: *DBHost
  port: *DBPort
  dbname: &DatastoreDBName datastore
  auth:
    ro:
      username: &DatastoreROUsername datastore_ro
      password: &DatastoreROUsername changeMe
    rw:
      username: &DatastoreRWUsername ckan
      password: &DatastoreRWPassword changeMe

# Redis -----------------------------------------------------------------------
redis:
  url: redis://redis-svc-headless:6379/0

# Solr ------------------------------------------------------------------------
solr:
  url: http://solr-svc-headless:8983/solr/ckan
  user:
  password:

# DataPusher ------------------------------------------------------------------
datapusher:
  url: http://datapusher-svc-headless:8800/

# SMTP ------------------------------------------------------------------------
smtp:
  server: "smtpServerURLorIP:port"
  user: "smtpUser"
  password: "smtpPassword"
  mailFrom: "postmaster@domain.com"
  tls: "enabled"
  startTls: "true"

# Resources -------------------------------------------------------------------
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 256Mi

# Ingress ---------------------------------------------------------------------
ingress:
  certManager:
    issuer: letsencrypt-staging

http:
  domain:
  subpath:


nodeSelector: {}
tolerations: []
affinity: {}




# # Default values for ckan.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}
